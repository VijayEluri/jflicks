# This is a sample local.properties file where you can add the local
# custom properties we support.  The idea is for this file to include
# everything possible and you as a developer can customize the build
# process for your local machine.  This way no local dependencies get
# put into our source repository tree.

# We have a target called "checkstyle" that needs the checkstyle package. You
# should put the full path of where you have it installed.
checkstyle.home=../checkstyle-5.0

# Really shouldn't change this as the file is in this directory with all
# the sane settings we want to use.
checks=checks.xml

findbugs.home=../findbugs-1.3.9
findbugs.output=html
findbugs.stylesheet=fancy
findbugs.file=docs/jflicks-foundBugs-${findbugs.stylesheet}.html

# These are paths to installations of our applications suitable for
# development and testing.  The idea is to install these apps using
# the installation programs and then to use them for development.  Write
# some code and then deploy updated/changed/added bundles.
felix.server.home=../server
felix.aspirin.home=../aspirin
felix.client.home=../client
felix.scheduler.home=../scheduler
felix.fe.home=../fe
felix.metadata.home=../metadata

# Now during development you have control of what bundles get deployed
# to the test home paths set above.  Why deploy everything when you may
# be concentrating on a particular bundle?  Or perhaps the server you
# are working on can not use a bundle at all - why deploy it?
server.deploy=jflicks-base.jar, \
 jflicks-stream-http.jar, \
 jflicks-photomanager-digikam.jar, \
 jflicks-videomanager-system.jar, \
 jflicks-tv-programdata-sd.jar, \
 jflicks-tv-recorder-hdhr.jar, \
 jflicks-tv-recorder-v4l2.jar, \
 jflicks-tv-scheduler-system.jar, \
 jflicks-tv-live-system.jar, \
 jflicks-tv-postproc-system.jar, \
 jflicks-tv-postproc-worker-comskip.jar, \
 jflicks-tv-postproc-worker-mediainfo.jar, \
 jflicks-tv-postproc-worker-ffmpegscreenshot.jar, \
 jflicks-trailer-apple.jar, \
 jflicks-tv-ondemand-roku.jar, \
 jflicks-nms-system.jar, \
 jflicks-swingx.jar, \
 jflicks-jdom.jar, \
 jflicks-sqlitejdbc.jar

aspirin.deploy=jflicks-base.jar \
 jflicks-swingx.jar, \
 jflicks-nms-remote.jar, \
 jflicks-ui.jar, \
 jflicks-ui-view.jar, \
 jflicks-ui-view-aspirin.jar,\
 jflicks-ui-view-aspirin-analyze.jar,\
 jflicks-ui-view-aspirin-analyze-path.jar

client.deploy=jflicks-base.jar \
 jflicks-swingx.jar, \
 jflicks-nms-remote.jar, \
 jflicks-ui.jar, \
 jflicks-ui-view.jar, \
 jflicks-ui-view-client.jar

scheduler.deploy=jflicks-base.jar, \
 jflicks-swingx.jar, \
 jflicks-nms-remote.jar, \
 jflicks-ui.jar, \
 jflicks-ui-view.jar, \
 jflicks-ui-view-scheduler.jar

fe.deploy=jflicks-base.jar, \
 jflicks-player-vlcj.jar, \
 jflicks-player-vlcdvd.jar, \
 jflicks-player-chrome.jar, \
 jflicks-player-mplayer.jar, \
 jflicks-player-photoshow.jar, \
 jflicks-jna.jar, \
 jflicks-swingx.jar, \
 jflicks-timingframework.jar, \
 jflicks-nms-remote.jar, \
 jflicks-ui.jar, \
 jflicks-ui-view.jar, \
 jflicks-ui-view-fe.jar, \
 jflicks-ui-view-fe-screen.jar, \
 jflicks-ui-view-fe-screen-dvd.jar, \
 jflicks-ui-view-fe-screen-livetv.jar, \
 jflicks-ui-view-fe-screen-ondemand.jar, \
 jflicks-ui-view-fe-screen-photo.jar, \
 jflicks-ui-view-fe-screen-preference.jar, \
 jflicks-ui-view-fe-screen-preview.jar, \
 jflicks-ui-view-fe-screen-recording.jar, \
 jflicks-ui-view-fe-screen-schedule.jar, \
 jflicks-ui-view-fe-screen-script.jar, \
 jflicks-ui-view-fe-screen-video.jar, \
 jflicks-ui-view-fe-screen-googletv.jar, \
 jflicks-rc-lirc.jar, \
 jflicks-imagecache-system.jar

metadata.deploy=jflicks-base.jar, \
 jflicks-swingx.jar, \
 jflicks-nms-remote.jar, \
 jflicks-metadata-themoviedb.jar, \
 jflicks-metadata-thetvdb.jar, \
 jflicks-ui.jar, \
 jflicks-ui-view.jar, \
 jflicks-ui-view-metadata.jar, \
 jflicks-jdom.jar, \
 jflicks-thetvdbapi.jar
